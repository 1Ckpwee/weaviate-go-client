name: Tests

on:
  push:
    branches:
      - main
    tags:
      - '**'
    paths-ignore:
      - LICENSE
      - README.md
      - CONTRIBUTE.md
      - CODE_OF_CONDUCT.md
  pull_request:

jobs:
  auth-tests:
    name: Auth integration tests
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      OKTA_CLIENT_SECRET: ${{ secrets.OKTA_CLIENT_SECRET }}
      WCS_DUMMY_CI_PW: ${{ secrets.WCS_DUMMY_CI_PW }}
      OKTA_DUMMY_CI_PW: ${{ secrets.OKTA_DUMMY_CI_PW }}
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        if: ${{ !github.event.pull_request.head.repo.fork }}
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true
      - name: Start Weaviate
        run: ./test/start_containers.sh
      - name: Run tests
        run: go test -v -count 1 -race test/auth/*.go
      - name: Stop Weaviate
        run: ./test/stop_containers.sh
  tests:
    name: Integration
    runs-on: ubuntu-latest
    strategy:
      matrix:
        auth_integration: [ "auth_enabled", "auth_disabled" ]
    env:
      EXTERNAL_WEAVIATE_RUNNING: false
      OKTA_DUMMY_CI_PW: ${{ secrets.OKTA_DUMMY_CI_PW }}
      INTEGRATION_TESTS_AUTH: ${{ matrix.auth_integration }}
      OPENAI_APIKEY: ${{ secrets.OPENAI_APIKEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        if: ${{ !github.event.pull_request.head.repo.fork }}
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true
      - name: Run tests
        run: ( for pkg in $(go list ./... | grep 'weaviate-go-client/v4/test/' | grep -v 'auth'); do if ! go test -v -count 1 -race "$pkg"; then echo "Test for $pkg failed" >&2; false; exit; fi; done)
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true
      - name: Run tests
        run: go test -v ./weaviate/...
  tests-deprecated:
    runs-on: ubuntu-latest
    env:
      EXTERNAL_WEAVIATE_RUNNING: false
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        if: ${{ !github.event.pull_request.head.repo.fork }}
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: Run tests
        run:
          go test -v -count 1 -race test_deprecated/*.go