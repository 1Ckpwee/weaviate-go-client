package weaviateclient

import (
	"fmt"
	"github.com/stretchr/testify/assert"
	"os"
	"testing"
)

func isIntegrationTest() bool {
	env := os.Getenv("INTEGRATION_TESTING_ENABLED")
	enabled := env == "true"
	fmt.Printf("INTEGRATION_TESTING_ENABLED: %v \n", enabled)
	return enabled
}


func TestMisc_integration(t *testing.T) {
	t.Run("ready", func(t *testing.T) {
		if !isIntegrationTest(){return}

		cfg := Config{
			Host:   "localhost:8080",
			Scheme: "http",
		}

		client := New(cfg)
		isReady, err := client.Misc.ReadyChecker().Do()

		assert.Nil(t, err)
		assert.True(t, isReady)
	})

	t.Run("live", func(t *testing.T) {
		if !isIntegrationTest(){return}

		cfg := Config{
			Host:   "localhost:8080",
			Scheme: "http",
		}

		client := New(cfg)
		isLive, err := client.Misc.LifeChecker().Do()

		assert.Nil(t, err)
		assert.True(t, isLive)
	})

	t.Run("openID", func(t *testing.T) {
		if !isIntegrationTest(){return}

		cfg := Config{
			Host:   "localhost:8080",
			Scheme: "http",
		}

		client := New(cfg)
		openIDconfig, err := client.Misc.OpenIDConfigurationGetter().Do()

		assert.Nil(t, err)
		assert.Nil(t, openIDconfig)



	})
}
//
//func TestMisc_autogenerated(t *testing.T) {
//	t.Run("ready", func(t *testing.T) {
//		config := NewConfiguration()
//
//		client := NewAPIClient(config)
//
//
//		Thing{
//			Class:              "",
//			VectorWeights:      nil,
//			Schema:             nil,
//			Meta:               nil,
//			Id:                 "",
//			CreationTimeUnix:   0,
//			LastUpdateTimeUnix: 0,
//			Classification:     nil,
//			Vector:             nil,
//			Interpretation:     nil,
//			NearestNeighbors:   nil,
//			FeatureProjection:  nil,
//		}
//
//		client.ThingsApi.ThingsCreate(context.TODO(), )
//		//
//		//// InlineResponse2002, *http.Response, error
//		//inlineResponse, httpResponse, err := client.WellKnownApi.WellKnownOpenidConfigurationGet(context.TODO())
//		//
//		//inlineResponse.ClientId
//		//httpResponse.StatusCode
//		//err
//
//	})
//}